spring.application.name=user
spring.main.web-application-type=none

#Producer
spring.kafka.producer.client-id=user-sender
spring.kafka.producer.bootstrap-servers=localhost:9094,localhost:9095,localhost:9096
#Дополнительные свойства
#Уровень гарантии доставки
spring.kafka.producer.properties.acks=1
#Количество попыток повторной отправки
spring.kafka.producer.properties.retries=3
#Время ожидания между попытками
spring.kafka.producer.properties.retry.backoff.ms=500
#Таймаут на запрос
spring.kafka.producer.properties.request.timeout.ms=2000
#Сериализаторы
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

#Consumer
spring.kafka.consumer.client-id=user-receiver
spring.kafka.consumer.bootstrap-servers=localhost:9094,localhost:9095,localhost:9096
# Указываем десериализаторы для ключей и значений сообщений
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
# Настройки десериализации значений
spring.kafka.consumer.properties.spring.deserializer.value.delegate=org.springframework.kafka.support.serializer.JsonDeserializer
spring.json.trusted.packages=*
spring.kafka.properties.allow.deserialization=com.kvlasova.common.model.Message
spring.kafka.consumer.group-id=user-receiver-group
# Включаем автоматический коммит смещений
spring.kafka.consumer.enable-auto-commit=true
# Устанавливаем начальное смещение на самое раннее в случае отсутствия
spring.kafka.consumer.auto-offset-reset=earliest

logging.level.org.apache.kafka.clients.NetworkClient=off
